# Generated by Django 5.0.6 on 2024-06-23 08:05

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Food_category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('image', models.ImageField(default='images/food_category/default.png', upload_to='images/food_category')),
                ('description', models.TextField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('street', models.CharField(max_length=50)),
                ('appratment_number', models.CharField(blank=True, max_length=10, null=True)),
                ('city', models.CharField(max_length=50)),
                ('state', models.CharField(choices=[('IN_AN', 'Andaman and Nicobar Islands'), ('IN_AP', ' Andhra Pradesh'), ('IN_AR', 'Arunachal Pradesh'), ('IN_AS', 'Assam'), ('IN_BR', 'Bihar'), ('IN_CH', 'Chandigarh'), ('IN_CT', 'Chhattisgarh'), ('IN_DD', 'Daman and Diu'), ('IN_DL', 'Delhi'), ('IN_GA', 'Goa'), ('IN_GJ', 'Gujarat'), ('IN_HR', 'Haryana'), ('IN_HP', 'Himachal Pradesh'), ('IN_JK', 'Jammu and Kashmir'), ('IN_JH', 'Jharkhand'), ('IN_KA', 'Karnataka'), ('IN_KL', 'Kerala'), ('IN_LA', 'Ladakh'), ('IN_LD', 'Lakshadweep'), ('IN_MH', 'Maharashtra'), ('IN_MN', 'Manipur'), ('IN_ML', 'Meghalaya'), ('IN_MZ', 'Mizoram'), ('IN_MP', 'Madhya Pradesh'), ('IN_NR', 'Nagaland'), ('IN_OR', 'Odisha'), ('IN_PY', 'Puducherry'), ('IN_PB', 'Punjab'), ('IN_RJ', 'Rajasthan'), ('IN_SK', 'Sikkim'), ('IN_TN', 'Tamil Nadu'), ('IN_TG', 'Telangana'), ('IN_TR', 'Tripura'), ('IN_UP', 'Uttar Pradesh'), ('IN_UT', 'Uttarakhand'), ('IN_WB', 'West Bengal')], default='IN_UP', max_length=5)),
                ('postal_code', models.IntegerField()),
                ('country', models.IntegerField(choices=[(1, 'Afghanistan'), (2, 'Albania'), (3, 'Algeria'), (4, 'Andorra'), (5, 'Angola'), (6, 'Antigua and Barbuda'), (7, 'Argentina'), (8, 'Armenia'), (9, 'Australia'), (10, 'Austria'), (11, 'Azerbaijan'), (12, 'Bahamas'), (13, 'Bahrain'), (14, 'Bangladesh'), (15, 'Barbados'), (16, 'Belarus'), (17, 'Belgium'), (18, 'Belize'), (19, 'Benin'), (20, 'Bhutan'), (21, 'Bolivia'), (22, 'Bosnia and Herzegovina'), (23, 'Botswana'), (24, 'Brazil'), (25, 'Brunei'), (26, 'Bulgaria'), (27, 'Burkina Faso'), (28, 'Burundi'), (29, 'Cabo Verde'), (30, 'Cambodia'), (31, 'Cameroon'), (32, 'Canada'), (33, 'Central African Republic'), (34, 'Chad'), (35, 'Chile'), (36, 'China'), (37, 'Colombia'), (38, 'Comoros'), (39, 'Congo'), (40, 'Costa Rica'), (41, 'Croatia'), (42, 'Cuba'), (43, 'Cyprus'), (44, 'Czech Republic'), (45, 'Democratic Republic of the Congo'), (46, 'Denmark'), (47, 'Djibouti'), (48, 'Dominica'), (49, 'Dominican Republic'), (50, 'Ecuador'), (51, 'Egypt'), (52, 'El Salvador'), (53, 'Equatorial Guinea'), (54, 'Eritrea'), (55, 'Estonia'), (56, 'Eswatini'), (57, 'Ethiopia'), (58, 'Fiji'), (59, 'Finland'), (60, 'France'), (61, 'Gabon'), (62, 'Gambia'), (63, 'Georgia'), (64, 'Germany'), (65, 'Ghana'), (66, 'Greece'), (67, 'Grenada'), (68, 'Guatemala'), (69, 'Guinea'), (70, 'Guinea-Bissau'), (71, 'Guyana'), (72, 'Haiti'), (73, 'Honduras'), (74, 'Hungary'), (75, 'Iceland'), (76, 'India'), (77, 'Indonesia'), (78, 'Iran'), (79, 'Iraq'), (80, 'Ireland'), (81, 'Israel'), (82, 'Italy'), (83, 'Ivory Coast'), (84, 'Jamaica'), (85, 'Japan'), (86, 'Jordan'), (87, 'Kazakhstan'), (88, 'Kenya'), (89, 'Kiribati'), (90, 'Korea North'), (91, 'Korea South'), (92, 'Kuwait'), (93, 'Kyrgyzstan'), (94, 'Laos'), (95, 'Latvia'), (96, 'Lebanon'), (97, 'Lesotho'), (98, 'Liberia'), (99, 'Libya'), (100, 'Liechtenstein'), (101, 'Lithuania'), (102, 'Luxembourg'), (103, 'Madagascar'), (104, 'Malawi'), (105, 'Malaysia'), (106, 'Maldives'), (107, 'Mali'), (108, 'Malta'), (109, 'Marshall Islands'), (110, 'Mauritania'), (111, 'Mauritius'), (112, 'Mexico'), (113, 'Micronesia'), (114, 'Moldova'), (115, 'Monaco'), (116, 'Mongolia'), (117, 'Montenegro'), (118, 'Morocco'), (119, 'Mozambique'), (120, 'Myanmar'), (121, 'Namibia'), (122, 'Nauru'), (123, 'Nepal'), (124, 'Netherlands'), (125, 'New Zealand'), (126, 'Nicaragua'), (127, 'Niger'), (128, 'Nigeria'), (129, 'North Macedonia'), (130, 'Norway'), (131, 'Oman'), (132, 'Pakistan'), (133, 'Palau'), (134, 'Palestine'), (135, 'Panama'), (136, 'Papua New Guinea'), (137, 'Paraguay'), (138, 'Peru'), (139, 'Philippines'), (140, 'Poland'), (141, 'Portugal'), (142, 'Qatar'), (143, 'Romania'), (144, 'Russia'), (145, 'Rwanda'), (146, 'Saint Kitts and Nevis'), (147, 'Saint Lucia'), (148, 'Saint Vincent and the Grenadines'), (149, 'Samoa'), (150, 'San Marino'), (151, 'Sao Tome and Principe'), (152, 'Saudi Arabia'), (153, 'Senegal'), (154, 'Serbia'), (155, 'Seychelles'), (156, 'Sierra Leone'), (157, 'Singapore'), (158, 'Slovakia'), (159, 'Slovenia'), (160, 'Solomon Islands'), (161, 'Somalia'), (162, 'South Africa'), (163, 'South Sudan'), (164, 'Spain'), (165, 'Sri Lanka'), (166, 'Sudan'), (167, 'Suriname'), (168, 'Sweden'), (169, 'Switzerland'), (170, 'Syria'), (171, 'Taiwan'), (172, 'Tajikistan'), (173, 'Tanzania'), (174, 'Thailand'), (175, 'Timor-Leste'), (176, 'Togo'), (177, 'Tonga'), (178, 'Trinidad and Tobago'), (179, 'Tunisia'), (180, 'Turkey'), (181, 'Turkmenistan'), (182, 'Tuvalu'), (183, 'Uganda'), (184, 'Ukraine'), (185, 'United Arab Emirates'), (186, 'United Kingdom'), (187, 'United States'), (188, 'Uruguay'), (189, 'Uzbekistan'), (190, 'Vanuatu'), (191, 'Vatican City'), (192, 'Venezuela'), (193, 'Vietnam'), (194, 'Yemen'), (195, 'Zambia'), (196, 'Zimbabwe')], default=76)),
                ('landmark', models.CharField(blank=True, max_length=50, null=True)),
                ('latitude', models.IntegerField(blank=True, null=True)),
                ('longitude', models.IntegerField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=50)),
                ('image_logo', models.ImageField(default='images/restaurants_logo/default.png', upload_to='images/restaurants_logo')),
                ('phone', models.CharField(max_length=20, unique=True)),
                ('website', models.URLField(blank=True, max_length=50, null=True)),
                ('description', models.TextField(blank=True, max_length=255, null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('opening_hours_from', models.TimeField(blank=True, null=True)),
                ('opening_hours_to', models.TimeField(blank=True, null=True)),
                ('is_open_now', models.BooleanField(default=False)),
                ('reason_for_not_opening', models.TextField(blank=True, max_length=255, null=True)),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restaurant_stores.address')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RestaurantImages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('image', models.ImageField(upload_to='images/restaurant_images')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('description', models.TextField(blank=True, max_length=255, null=True)),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restaurant_stores.restaurant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Subfood_category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('image', models.ImageField(default='images/subfood_category/default.png', upload_to='images/subfood_category')),
                ('description', models.TextField(blank=True, max_length=255, null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restaurant_stores.food_category')),
            ],
        ),
        migrations.CreateModel(
            name='Dish',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=50)),
                ('image', models.ImageField(upload_to='images/dishes/')),
                ('price', models.IntegerField()),
                ('description', models.TextField(blank=True, max_length=255, null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('category', models.ManyToManyField(to='restaurant_stores.food_category')),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restaurant_stores.restaurant')),
                ('sub_category', models.ManyToManyField(to='restaurant_stores.subfood_category')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
